{
  "created": 1725958040.408704,
  "duration": 41.17548203468323,
  "exitcode": 1,
  "root": "/Users/bate/Development/fediverse/firm/testing/firm-aptesting",
  "environment": {
    "StartTime": "2024-09-10T10:47:20.409084+02:00",
    "Python": "3.12.2",
    "Platform": "macOS-12.7.6-x86_64-i386-64bit",
    "Packages": {
      "pytest": "8.3.2",
      "pluggy": "1.5.0",
      "activitypub-testsuite": "0.1.0",
      "firm-aptesting": "0.1.0"
    },
    "Plugins": {
      "asyncio": "0.24.0",
      "json-report": "1.5.0",
      "metadata": "3.1.1",
      "activitypub-testsuite": "0.1.0",
      "anyio": "3.7.1"
    },
    "GIT_BRANCH": "pr/fix-unit-test"
  },
  "summary": {
    "failed": 1,
    "total": 1,
    "collected": 1
  },
  "tests": [
    {
      "nodeid": "firm_aptesting/tests/test_fedi_follow.py::test_inbox_undo_follow",
      "lineno": 111,
      "outcome": "failed",
      "metadata": {
        "ap_capability": [
          "s2s.inbox.post.Undo.Follow",
          "collections.followers"
        ]
      },
      "setup": {
        "duration": 0.8859706749208272,
        "outcome": "passed"
      },
      "call": {
        "duration": 35.72821221128106,
        "outcome": "failed",
        "crash": {
          "path": "/Users/bate/Development/fediverse/firm/testing/firm-aptesting/.venv/lib/python3.12/site-packages/httpx/_transports/default.py",
          "lineno": 77,
          "message": "httpx.ConnectError: [Errno 8] nodename nor servname provided, or not known"
        },
        "traceback": [
          {
            "path": "firm_aptesting/tests/test_fedi_follow.py",
            "lineno": 127,
            "message": ""
          },
          {
            "path": "firm_aptesting/support.py",
            "lineno": 142,
            "message": "in post"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/testclient.py",
            "lineno": 597,
            "message": "in post"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1132,
            "message": "in post"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/testclient.py",
            "lineno": 488,
            "message": "in request"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 814,
            "message": "in request"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 901,
            "message": "in send"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 929,
            "message": "in _send_handling_auth"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 966,
            "message": "in _send_handling_redirects"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1002,
            "message": "in _send_single_request"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/testclient.py",
            "lineno": 381,
            "message": "in handle_request"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/testclient.py",
            "lineno": 378,
            "message": "in handle_request"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/anyio/from_thread.py",
            "lineno": 277,
            "message": "in call"
          },
          {
            "path": "/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/concurrent/futures/_base.py",
            "lineno": 456,
            "message": "in result"
          },
          {
            "path": "/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/concurrent/futures/_base.py",
            "lineno": 401,
            "message": "in __get_result"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/anyio/from_thread.py",
            "lineno": 217,
            "message": "in _call_func"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/applications.py",
            "lineno": 113,
            "message": "in __call__"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/middleware/errors.py",
            "lineno": 187,
            "message": "in __call__"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/middleware/errors.py",
            "lineno": 165,
            "message": "in __call__"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py",
            "lineno": 62,
            "message": "in __call__"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/_exception_handler.py",
            "lineno": 62,
            "message": "in wrapped_app"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/_exception_handler.py",
            "lineno": 51,
            "message": "in wrapped_app"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/routing.py",
            "lineno": 715,
            "message": "in __call__"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/routing.py",
            "lineno": 735,
            "message": "in app"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/routing.py",
            "lineno": 288,
            "message": "in handle"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/middleware/authentication.py",
            "lineno": 48,
            "message": "in __call__"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/routing.py",
            "lineno": 76,
            "message": "in app"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/_exception_handler.py",
            "lineno": 62,
            "message": "in wrapped_app"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/_exception_handler.py",
            "lineno": 51,
            "message": "in wrapped_app"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/starlette/routing.py",
            "lineno": 73,
            "message": "in app"
          },
          {
            "path": "../../firm-server/firm_server/routes.py",
            "lineno": 65,
            "message": "in wrapper"
          },
          {
            "path": "../../firm/firm/services/activitypub.py",
            "lineno": 337,
            "message": "in process_request"
          },
          {
            "path": "../../firm/firm/services/activitypub.py",
            "lineno": 99,
            "message": "in process_request"
          },
          {
            "path": "../../firm/firm/services/activitypub.py",
            "lineno": 81,
            "message": "in _process_post"
          },
          {
            "path": "../../firm/firm/services/activitypub.py",
            "lineno": 116,
            "message": "in _process_inbox"
          },
          {
            "path": "../../firm/firm/services/activitypub.py",
            "lineno": 183,
            "message": "in _process_inbox_follow"
          },
          {
            "path": "../../firm/firm/services/activitypub.py",
            "lineno": 291,
            "message": "in _process_outbox_internal"
          },
          {
            "path": "../../firm-server/firm_server/routes.py",
            "lineno": 177,
            "message": "in deliver"
          },
          {
            "path": "../../firm-server/firm_server/routes.py",
            "lineno": 128,
            "message": "in _post"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1848,
            "message": "in post"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1530,
            "message": "in request"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1617,
            "message": "in send"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1645,
            "message": "in _send_handling_auth"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1682,
            "message": "in _send_handling_redirects"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_client.py",
            "lineno": 1719,
            "message": "in _send_single_request"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_transports/default.py",
            "lineno": 352,
            "message": "in handle_async_request"
          },
          {
            "path": "/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/contextlib.py",
            "lineno": 158,
            "message": "in __exit__"
          },
          {
            "path": ".venv/lib/python3.12/site-packages/httpx/_transports/default.py",
            "lineno": 77,
            "message": "ConnectError"
          }
        ],
        "longrepr": "remote_host = 'remote.test', remote_port = 443\n\n    async def connect_tcp(\n        remote_host: IPAddressType,\n        remote_port: int,\n        *,\n        local_host: IPAddressType | None = None,\n        tls: bool = False,\n        ssl_context: ssl.SSLContext | None = None,\n        tls_standard_compatible: bool = True,\n        tls_hostname: str | None = None,\n        happy_eyeballs_delay: float = 0.25,\n    ) -> SocketStream | TLSStream:\n        \"\"\"\n        Connect to a host using the TCP protocol.\n    \n        This function implements the stateless version of the Happy Eyeballs algorithm (RFC\n        6555). If ``remote_host`` is a host name that resolves to multiple IP addresses,\n        each one is tried until one connection attempt succeeds. If the first attempt does\n        not connected within 250 milliseconds, a second attempt is started using the next\n        address in the list, and so on. On IPv6 enabled systems, an IPv6 address (if\n        available) is tried first.\n    \n        When the connection has been established, a TLS handshake will be done if either\n        ``ssl_context`` or ``tls_hostname`` is not ``None``, or if ``tls`` is ``True``.\n    \n        :param remote_host: the IP address or host name to connect to\n        :param remote_port: port on the target host to connect to\n        :param local_host: the interface address or name to bind the socket to before connecting\n        :param tls: ``True`` to do a TLS handshake with the connected stream and return a\n            :class:`~anyio.streams.tls.TLSStream` instead\n        :param ssl_context: the SSL context object to use (if omitted, a default context is created)\n        :param tls_standard_compatible: If ``True``, performs the TLS shutdown handshake before closing\n            the stream and requires that the server does this as well. Otherwise,\n            :exc:`~ssl.SSLEOFError` may be raised during reads from the stream.\n            Some protocols, such as HTTP, require this option to be ``False``.\n            See :meth:`~ssl.SSLContext.wrap_socket` for details.\n        :param tls_hostname: host name to check the server certificate against (defaults to the value\n            of ``remote_host``)\n        :param happy_eyeballs_delay: delay (in seconds) before starting the next connection attempt\n        :return: a socket stream object if no TLS handshake was done, otherwise a TLS stream\n        :raises OSError: if the connection attempt fails\n    \n        \"\"\"\n        # Placed here due to https://github.com/python/mypy/issues/7057\n        connected_stream: SocketStream | None = None\n    \n        async def try_connect(remote_host: str, event: Event) -> None:\n            nonlocal connected_stream\n            try:\n                stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)\n            except OSError as exc:\n                oserrors.append(exc)\n                return\n            else:\n                if connected_stream is None:\n                    connected_stream = stream\n                    tg.cancel_scope.cancel()\n                else:\n                    await stream.aclose()\n            finally:\n                event.set()\n    \n        asynclib = get_asynclib()\n        local_address: IPSockAddrType | None = None\n        family = socket.AF_UNSPEC\n        if local_host:\n            gai_res = await getaddrinfo(str(local_host), None)\n            family, *_, local_address = gai_res[0]\n    \n        target_host = str(remote_host)\n        try:\n>           addr_obj = ip_address(remote_host)\n\n.venv/lib/python3.12/site-packages/anyio/_core/_sockets.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = 'remote.test'\n\n    def ip_address(address):\n        \"\"\"Take an IP string/int and return an object of the correct type.\n    \n        Args:\n            address: A string or integer, the IP address.  Either IPv4 or\n              IPv6 addresses may be supplied; integers less than 2**32 will\n              be considered to be IPv4 by default.\n    \n        Returns:\n            An IPv4Address or IPv6Address object.\n    \n        Raises:\n            ValueError: if the *address* passed isn't either a v4 or a v6\n              address\n    \n        \"\"\"\n        try:\n            return IPv4Address(address)\n        except (AddressValueError, NetmaskValueError):\n            pass\n    \n        try:\n            return IPv6Address(address)\n        except (AddressValueError, NetmaskValueError):\n            pass\n    \n>       raise ValueError(f'{address!r} does not appear to be an IPv4 or IPv6 address')\nE       ValueError: 'remote.test' does not appear to be an IPv4 or IPv6 address\n\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/ipaddress.py:54: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>, <class 'anyio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n>           yield\n\n.venv/lib/python3.12/site-packages/httpcore/_exceptions.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/httpcore/_backends/anyio.py:114: in connect_tcp\n    stream: anyio.abc.ByteStream = await anyio.connect_tcp(\n.venv/lib/python3.12/site-packages/anyio/_core/_sockets.py:192: in connect_tcp\n    gai_res = await getaddrinfo(\n.venv/lib/python3.12/site-packages/anyio/_core/_sockets.py:511: in getaddrinfo\n    gai_res = await get_asynclib().getaddrinfo(\n.venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:1690: in getaddrinfo\n    result = await get_running_loop().getaddrinfo(\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/asyncio/base_events.py:899: in getaddrinfo\n    return await self.run_in_executor(\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/concurrent/futures/thread.py:58: in run\n    result = self.fn(*self.args, **self.kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhost = b'remote.test', port = 443, family = <AddressFamily.AF_UNSPEC: 0>\ntype = <SocketKind.SOCK_STREAM: 1>, proto = 0, flags = 0\n\n    def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0):\n        \"\"\"Resolve host and port into list of address info entries.\n    \n        Translate the host/port argument into a sequence of 5-tuples that contain\n        all the necessary arguments for creating a socket connected to that service.\n        host is a domain name, a string representation of an IPv4/v6 address or\n        None. port is a string service name such as 'http', a numeric port number or\n        None. By passing None as the value of host and port, you can pass NULL to\n        the underlying C API.\n    \n        The family, type and proto arguments can be optionally specified in order to\n        narrow the list of addresses returned. Passing zero as a value for each of\n        these arguments selects the full range of results.\n        \"\"\"\n        # We override this function since we want to translate the numeric family\n        # and socket type values to enum constants.\n        addrlist = []\n>       for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE       socket.gaierror: [Errno 8] nodename nor servname provided, or not known\n\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/socket.py:963: gaierror\n\nThe above exception was the direct cause of the following exception:\n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:353: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n.venv/lib/python3.12/site-packages/httpcore/_async/connection_pool.py:262: in handle_async_request\n    raise exc\n.venv/lib/python3.12/site-packages/httpcore/_async/connection_pool.py:245: in handle_async_request\n    response = await connection.handle_async_request(request)\n.venv/lib/python3.12/site-packages/httpcore/_async/connection.py:92: in handle_async_request\n    raise exc\n.venv/lib/python3.12/site-packages/httpcore/_async/connection.py:69: in handle_async_request\n    stream = await self._connect(request)\n.venv/lib/python3.12/site-packages/httpcore/_async/connection.py:117: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n.venv/lib/python3.12/site-packages/httpcore/_backends/auto.py:31: in connect_tcp\n    return await self._backend.connect_tcp(\n.venv/lib/python3.12/site-packages/httpcore/_backends/anyio.py:112: in connect_tcp\n    with map_exceptions(exc_map):\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>, <class 'anyio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno 8] nodename nor servname provided, or not known\n\n.venv/lib/python3.12/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nremote_actor = <firm_aptesting.support.FirmRemoteActor object at 0x10d4ce300>\nlocal_actor = <firm_aptesting.support.FirmLocalActor object at 0x10d4ce6f0>\nremote_communicator = <firm_aptesting.support.FirmRemoteCommunicator object at 0x10d4ce330>\n\n    @pytest.mark.ap_capability(\n        \"s2s.inbox.post.Undo.Follow\",\n        \"collections.followers\",\n    )\n    def test_inbox_undo_follow(\n        remote_actor: Actor, local_actor: Actor, remote_communicator: RemoteCommunicator\n    ):\n        follow_activity = remote_actor.setup_activity(\n            {\n                \"type\": \"Follow\",\n                \"object\": local_actor.id,\n            }\n        )\n    \n        # Remote actor request to follow local actor\n>       remote_actor.post(local_actor.inbox, follow_activity)\n\nfirm_aptesting/tests/test_fedi_follow.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfirm_aptesting/support.py:142: in post\n    response = self.server.client.post(url, json=data, headers=headers, auth=self.auth)\n.venv/lib/python3.12/site-packages/starlette/testclient.py:597: in post\n    return super().post(\n.venv/lib/python3.12/site-packages/httpx/_client.py:1132: in post\n    return self.request(\n.venv/lib/python3.12/site-packages/starlette/testclient.py:488: in request\n    return super().request(\n.venv/lib/python3.12/site-packages/httpx/_client.py:814: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n.venv/lib/python3.12/site-packages/httpx/_client.py:901: in send\n    response = self._send_handling_auth(\n.venv/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth\n    response = self._send_handling_redirects(\n.venv/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects\n    response = self._send_single_request(request)\n.venv/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request\n    response = transport.handle_request(request)\n.venv/lib/python3.12/site-packages/starlette/testclient.py:381: in handle_request\n    raise exc\n.venv/lib/python3.12/site-packages/starlette/testclient.py:378: in handle_request\n    portal.call(self.app, scope, receive, send)\n.venv/lib/python3.12/site-packages/anyio/from_thread.py:277: in call\n    return cast(T_Retval, self.start_task_soon(func, *args).result())\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/concurrent/futures/_base.py:456: in result\n    return self.__get_result()\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/concurrent/futures/_base.py:401: in __get_result\n    raise self._exception\n.venv/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func\n    retval = await retval\n.venv/lib/python3.12/site-packages/starlette/applications.py:113: in __call__\n    await self.middleware_stack(scope, receive, send)\n.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:187: in __call__\n    raise exc\n.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:165: in __call__\n    await self.app(scope, receive, _send)\n.venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py:62: in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:62: in wrapped_app\n    raise exc\n.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:51: in wrapped_app\n    await app(scope, receive, sender)\n.venv/lib/python3.12/site-packages/starlette/routing.py:715: in __call__\n    await self.middleware_stack(scope, receive, send)\n.venv/lib/python3.12/site-packages/starlette/routing.py:735: in app\n    await route.handle(scope, receive, send)\n.venv/lib/python3.12/site-packages/starlette/routing.py:288: in handle\n    await self.app(scope, receive, send)\n.venv/lib/python3.12/site-packages/starlette/middleware/authentication.py:48: in __call__\n    await self.app(scope, receive, send)\n.venv/lib/python3.12/site-packages/starlette/routing.py:76: in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:62: in wrapped_app\n    raise exc\n.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:51: in wrapped_app\n    await app(scope, receive, sender)\n.venv/lib/python3.12/site-packages/starlette/routing.py:73: in app\n    response = await f(request)\n../../firm-server/firm_server/routes.py:65: in wrapper\n    return _adapt_response(await method(HttpConnectionAdapter(request, store)))\n../../firm/firm/services/activitypub.py:337: in process_request\n    return await tenant.process_request(request)\n../../firm/firm/services/activitypub.py:99: in process_request\n    return await self._process_post(request)\n../../firm/firm/services/activitypub.py:81: in _process_post\n    return await self._process_inbox(request, cast(APActor, box_owner))\n../../firm/firm/services/activitypub.py:116: in _process_inbox\n    return await self._process_inbox_follow(request, box_owner, activity)\n../../firm/firm/services/activitypub.py:183: in _process_inbox_follow\n    await self._process_outbox_internal(\n../../firm/firm/services/activitypub.py:291: in _process_outbox_internal\n    await self._delivery_service.deliver(activity)\n../../firm-server/firm_server/routes.py:177: in deliver\n    await self._post(inbox, message=message, auth=auth)\n../../firm-server/firm_server/routes.py:128: in _post\n    response = await client.post(\n.venv/lib/python3.12/site-packages/httpx/_client.py:1848: in post\n    return await self.request(\n.venv/lib/python3.12/site-packages/httpx/_client.py:1530: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n.venv/lib/python3.12/site-packages/httpx/_client.py:1617: in send\n    response = await self._send_handling_auth(\n.venv/lib/python3.12/site-packages/httpx/_client.py:1645: in _send_handling_auth\n    response = await self._send_handling_redirects(\n.venv/lib/python3.12/site-packages/httpx/_client.py:1682: in _send_handling_redirects\n    response = await self._send_single_request(request)\n.venv/lib/python3.12/site-packages/httpx/_client.py:1719: in _send_single_request\n    response = await transport.handle_async_request(request)\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:352: in handle_async_request\n    with map_httpcore_exceptions():\n/Users/bate/.pyenv/versions/3.12.2/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE-786\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno 8] nodename nor servname provided, or not known\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:77: ConnectError"
      },
      "teardown": {
        "duration": 0.005018625408411026,
        "outcome": "passed"
      }
    }
  ]
}